<?php
/*
* ProBot Version: 3.0
* Laravel Version: 10x
* Description: This source file "app/Http/_PurchaseReturnController.php" was generated by ProBot AI.
* Date: 3/5/2025 11:30:58 AM
* Contact: towhid1@outlook.com
*/

namespace App\Http\Controllers;

use App\Http\Controllers\Controller;
use App\Models\Product;
use App\Models\Purchase;
use App\Models\PurchaseReturn;
use App\Models\Purchases;
use App\Models\Supplier;
use App\Models\Purchase_Status;
use App\Models\PurchaseStatuse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\DB;
use Illuminate\Pagination\Paginator;

class PurchaseReturnController extends Controller
{
    public function index()
    {
        $purchasereturns = PurchaseReturn::paginate(10);
        return view("pages.erp.purchasereturn.index", ["purchasereturns" => $purchasereturns]);
    }
    public function create()
    {
        return view("pages.erp.purchasereturn.create", ["purchasess" => Purchase::all(), "suppliers" => Supplier::all(), "purchase_statuss" => PurchaseStatuse::all(), "products" => Product::all()]);
    }
    public function store(Request $request)
    {
        //PurchaseReturn::create($request->all());
        $purchasereturn = new PurchaseReturn;
        $purchasereturn->purchases_id = $request->purchases_id;
        $purchasereturn->supplier_id = $request->supplier_id;
        $purchasereturn->purchase_status_id = $request->purchase_status_id;
        $purchasereturn->order_total = $request->order_total;
        $purchasereturn->paid_amount = $request->paid_amount;
        $purchasereturn->discount = $request->discount;
        $purchasereturn->vat = $request->vat;
        $purchasereturn->date = $request->date;
        $purchasereturn->shipping_address = $request->shipping_address;
        $purchasereturn->description = $request->description;
        date_default_timezone_set("Asia/Dhaka");
        $purchasereturn->created_at = date('Y-m-d H:i:s');
        date_default_timezone_set("Asia/Dhaka");
        $purchasereturn->updated_at = date('Y-m-d H:i:s');

        $purchasereturn->save();

        return back()->with('success', 'Created Successfully.');
    }
    public function show($id)
    {
        $purchasereturn = PurchaseReturn::find($id);
        return view("pages.erp.purchasereturn.show", ["purchasereturn" => $purchasereturn]);
    }
    public function edit(PurchaseReturn $purchasereturn)
    {
        return view("pages.erp.purchasereturn.edit", ["purchasereturn" => $purchasereturn, "purchasess" => Purchase::all(), "suppliers" => Supplier::all(), "purchase_statuss" => PurchaseStatuse::all()]);
    }
    public function update(Request $request, PurchaseReturn $purchasereturn)
    {
        //PurchaseReturn::update($request->all());
        $purchasereturn = PurchaseReturn::find($purchasereturn->id);
        $purchasereturn->purchases_id = $request->purchases_id;
        $purchasereturn->supplier_id = $request->supplier_id;
        $purchasereturn->purchase_status_id = $request->purchase_status_id;
        $purchasereturn->order_total = $request->order_total;
        $purchasereturn->paid_amount = $request->paid_amount;
        $purchasereturn->discount = $request->discount;
        $purchasereturn->vat = $request->vat;
        $purchasereturn->date = $request->date;
        $purchasereturn->shipping_address = $request->shipping_address;
        $purchasereturn->description = $request->description;
        date_default_timezone_set("Asia/Dhaka");
        $purchasereturn->created_at = date('Y-m-d H:i:s');
        date_default_timezone_set("Asia/Dhaka");
        $purchasereturn->updated_at = date('Y-m-d H:i:s');

        $purchasereturn->save();

        return redirect()->route("purchasereturns.index")->with('success', 'Updated Successfully.');
    }
    public function destroy(PurchaseReturn $purchasereturn)
    {
        $purchasereturn->delete();
        return redirect()->route("purchasereturns.index")->with('success', 'Deleted Successfully.');
    }
}
